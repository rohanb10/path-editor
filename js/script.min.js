class CorruptInput extends Error{constructor(e,t="Error parsing input"){super(t);this.butter=e;this.name="CorruptInput"}}const FILE_MAP={csv:{type:"CSV",placeholder:"\n37.76084,-122.42851\n37.76095,-122.42839\n37.76094,-122.42821\n..."},poly:{type:"Polyline",placeholder:"\nefneFlxfjViBeh@u@k@k_AhEipAgdB..."},cords:{type:"Coordinates",placeholder:"\n[[37.76095,-122.42839],[37.76094,-122.42821],...\n\n or \n\n{lat: 37.76095, lng:-122.42839},\n{lat: 37.76094, lng:-122.42821}\n..."},json:{type:"GeoJSON",placeholder:'\n{\n  "type":"LineString",\n  "coordinates":[\n    [-122.42851, 37.76084],\n    [-122.42839, 37.76095],\n    [-122.42821, 37.76094],\n    [-122.42800, 37.76096],\n    ....\n  ]\n}'},gpx:{type:"GPX",placeholder:'\n<trkpt lat="18.974003" lon="72.805345">\n<trkpt lat="18.973853" lon="72.805601">\n<trkpt lat="18.973775" lon="72.805686">\n<trkpt lat="18.973625" lon="72.805680">\n...'}};function getFileType(e=true){var t=document.querySelector(".file-type-selected").getAttribute("data-selected");if(t&&!Object.values(FILE_MAP).find(e=>e.type===t))return null;if(e)return t.toLowerCase();return t}function changeFileType(e,t="n/a"){var o=document.querySelector(".file-type-selected");var n=e&&e.dataset?e.dataset.file:e;if(o.querySelector(".selected"))o.querySelector(".selected").classList.remove("selected");if(n===null){o.setAttribute("data-selected",t);document.getElementById("input-text").setAttribute("placeholder","Select a format\nfor an example")}else{o.setAttribute("data-selected",n);var a=o.querySelector(`span[data-file="${n}"`);if(a)a.classList.add("selected");var r=Object.values(FILE_MAP).find(e=>e.type===n).placeholder;if(r)document.getElementById("input-text").setAttribute("placeholder",r)}unplug();goToStep(1,false)}function guessFileType(e,t=""){var o=e?e.substring(e.lastIndexOf(".")+1).toLowerCase():"";if(o&&Object.keys(FILE_MAP).indexOf(o)>-1){changeFileType(FILE_MAP[o].type)}else{if(e.toLowerCase().indexOf("polyline")>-1){changeFileType(FILE_MAP["poly"].type)}else{changeFileType(null,"Select File Type")}}}function readInputFile(){var e=document.getElementById("input-file");if(e.files.length!==1){console.log("wtf");return}toast("Parsing file");var t=new FileReader;t.onload=(()=>{var e=t.result;Object.assign(document.getElementById("input-text"),{disabled:true,value:e});hideNextButton(1,false);guessFileType(document.getElementById("input-file").files[0].name)});t.readAsText(document.getElementById("input-file").files[0])}function removeDuplicates(e){var t=[];for(var o=1;o<e.length;o++){if(!(e[o][0]==e[o-1][0]&&e[o][1]==e[o-1][1]))t.push(e[o])}return t}function getCoordinatesFromGPX(e){const t=/<trkpt(\s*(lat|lon)="([-0-9\.]+)"){2}/g;const o=/([-0-9\.]+)/g;var n=e.match(t);if(!n||n.length<=1){toast(["Cannot find any coordinates",`Are you sure this is the <a target="blank" href="https://github.com/rohanb10/path-editor/blob/master/README.md#gpx">right file type</a>?`]);return false}var a=getValidCoordinatesFromLines(n);if(typeof a==="boolean"&&!a)return false;return removeDuplicates(a)}function getCoordinatesFromCSV(e){const t=/((-|\+)?\d{1,3}\.\d{0,7}){1,2}/g;var o=e.match(t);if(!o||o.length===0){toast(["Cannot find any coordinates",`Are you sure this is the <a target="blank" href="https://github.com/rohanb10/path-editor/blob/master/README.md#input-formats">right file type</a>?`]);return false}var n=getValidCoordinatesFromLines(o);if(typeof n==="boolean"&&!n)return false;return removeDuplicates(n)}function getCoordinatesFromGeoJSON(e){try{var t=JSON.parse(e);if(t&&Array.isArray(t)){t=t.shift()}if(t&&t.type==="FeatureCollection"&&t.features){t=t.features}if(t&&Array.isArray(t)){t=t.shift()}console.log(2,t);if(!t||!t.coordinates){throw new CorruptInput(["No <a>coordinates</a> found in GeoJSON",'Are you sure this is the <a target="blank" href="https://github.com/rohanb10/path-editor/blob/master/README.md#geojson">right file type</a>?'])}if(t&&t.type!=="LineString"){throw new CorruptInput(['No <a target="_blank" href="https://tools.ietf.org/html/rfc7946#section-3.1.4">LineString</a> found in GeoJSON','Are you sure this is the <a target="blank" href="https://github.com/rohanb10/path-editor/blob/master/README.md#geojson">right file type</a>?'])}var o=[];t.coordinates.forEach(e=>o.push(e));if(o.length===0){throw new CorruptInput(['No <a target="_blank" href="https://tools.ietf.org/html/rfc7946#section-3.1.4">LineStrings</a> found',"Unable to preview GeoJSON"])}o=getValidCoordinates(o);if(typeof o==="boolean"&&!o)return false;return removeDuplicates(o)}catch(t){if(t instanceof CorruptInput){toast(t.butter,-1)}else if(t instanceof SyntaxError){toast(['Check if your <a target="_blank" href="http://json.parser.online.fr/">GeoJSON syntax</a> is valid',"Cannot parse input"],-1)}else{toast(t.message,-1);console.warn(t,t.name,t.message)}console.log(e);return false}}function getValidCoordinates(e,t=5){var o=[];var n=true;e.forEach(e=>{if(e.length!==2){n=false;return}var a=parseFloat(e[0]).toFixed(t);if(!(-180<=a&&a<=180)){n=false;return}var r=parseFloat(e[1]).toFixed(t);if(!(-90<=r&&r<=90)){n=false;return}o.push([r,a])});if(o.length===0){toast("No vaild coordinates found",-1);return false}if(!n)toast(["Some coordinates are <a>invalid</a>","They have been skipped"],5e3);return o}function getValidCoordinatesFromLines(e,t=5){const o=/([-0-9\.]+)/g;var n=[];var a=true;e.forEach(e=>{var r=e.match(o);if(r.length!==2){toast(["Some coordinates are <a>invalid</a>","They have been skipped"],5e3);a=false;return}var l=parseFloat(r[0]).toFixed(t);if(!(-90<=l&&l<=90)){a=false;return}var i=parseFloat(r[1]).toFixed(t);if(!(-180<=i&&i<=180)){a=false;return}n.push([l,i])});if(n.length===0){toast("No vaild coordinates found",-1);return false}if(!a)toast(["Certain coordinates are <a>invalid</a>","They have been skipped"],5e3);return n}var textInputLength=-1;function uploaded(e,t){document.querySelector(".reset").classList.remove("hidden");switch(e){case"file":t.nextElementSibling.querySelector("span:last-of-type").innerText=t.value.split(String.fromCharCode(92)).pop();t.nextElementSibling.querySelector("span:first-of-type").classList.add("uploaded");readInputFile();goToStep(1.5,false);break;case"text":if(t.value.length>0){document.getElementById("input-file").disabled=true;if(getFileType===null)guessFileType();if(t.value.length!==textInputLength){goToStep(1,textInputLength.length<=0)}hideNextButton(1,false);return}resetUploadForm();break;default:break}}var simplecopy=function(){var e=document,t,o,n,a=false,r=e.createElement("div");function l(l){if(!t)t=e.body;r.innerText=l;t.appendChild(r);n=i(r);o=e.execCommand("copy",a,null);t.removeChild(r);return n&&o}function i(o){var n,r,l=window.getSelection,i=t.createTextRange;if(i){n=i();n.moveToElementText(o);n.select();return!a}else if(l){r=l();n=e.createRange();n.selectNodeContents(o);r.removeAllRanges();r.addRange(n);return!a}else{return a}}return l}();function downloadTypeChanged(e){document.querySelectorAll("#download-format option").forEach(e=>{e.disabled=false});document.getElementById(`nl`).classList.remove("hidden");document.getElementById(`option_clipboard`).selected=true;if(e.options[e.selectedIndex].value==="polyline"){document.getElementById(`nl`).classList.add("hidden");document.getElementById(`option_csv`).disabled=true;document.getElementById(`option_arr`).disabled=true;document.getElementById(`option_obj`).disabled=true}else{document.getElementById(`option_txt`).disabled=true}downloadFormatChanged(document.getElementById("download-format"))}function downloadFormatChanged(e){var t=e.options[e.selectedIndex];if(t.value==="clip"||t.value==="csv"){document.getElementById("new_lines").checked=true;document.getElementById("new_lines").disabled=true}else{document.getElementById("new_lines").disabled=false}}function downloadPath(){var e=document.getElementById("download-type").value;var t=document.getElementById("download-format");var o=document.querySelector(".clipboard-hidden");if(e==="polyline"){if(t.value==="clip")writeToClipboard(getPolylineFromPath());if(t.value==="txt")writeToFile(getPolylineFromPath(),"polyline.txt")}if(e==="cords"){var n=document.getElementById("new_lines").checked;var a=getCordsFromPath(path);if(t.value==="clip")writeToClipboard(exportCords(a,"arr",n));if(t.value==="csv")writeToFile(exportCords(a,"csv"),"polyline.csv");if(t.value==="arr")writeToFile(exportCords(a,"arr",n),"polyline_array.txt");if(t.value==="obj")writeToFile(exportCords(a,"obj",n),"polyline_object.txt")}}function writeToClipboard(e){toast("Copied to clipboard!",3e3);simplecopy(e)}function writeToFile(e,t){var o=Object.assign(document.createElement("a"),{className:"export-hidden",href:`data:text/plain;charset=utf-8,${encodeURIComponent(e)}`,download:t});toast("Downloading "+t);document.body.appendChild(o);o.click();document.body.removeChild(o)}var defaultMapOptions={zoom:2,maxZoom:18,minZoom:2,mapType:"roadmap",zoomControl:true,center:{lat:0,lng:0},precision:5,disableDoubleClickZoom:true,clickableIcons:false,fullscreenControl:false,strokeColorNum:3,styles:{featureType:"poi.business",stylers:[{visibility:"off"}]}};var mapOptions={};function loadPrefs(){document.getElementById("min-zoom").value=mapOptions.minZoom;document.getElementById("max-zoom").value=mapOptions.maxZoom;document.getElementById("cord-precision").value=mapOptions.precision;document.getElementById("map-type").selectedIndex=mapOptions.mapType;document.getElementById("path-color").dataset.color=mapOptions.strokeColorNum;document.querySelector(`.color-picker-tooltip .color-square[data-color="${mapOptions.strokeColorNum}"]`).classList.add("selected");document.getElementById("zoom-control").checked=mapOptions.zoomControl}function updatePrefs(){var e={};var t=parseInt(document.getElementById("min-zoom").value);var o=parseInt(document.getElementById("max-zoom").value);if(t>=o){o=t+1}if(mapOptions.minZoom!==t)e.minZoom=t;if(mapOptions.maxZoom!==o)e.maxZoom=o;var n=parseInt(document.getElementById("cord-precision").value);if(mapOptions.precision!==n)e.precision=n;var a=document.getElementById("zoom-control").checked;if(mapOptions.zoomControl!==a)e.zoomControl=a;var r=document.getElementById("map-type");var l=r.options[r.selectedIndex].value;if(mapOptions.mapType!==l){map.setMapTypeId(r.options[r.selectedIndex].value);e.mapType=r.selectedIndex}e.strokeColorNum=document.getElementById("path-color").dataset.color;if(path)path.setOptions({strokeColor:getColorFromNum(e.strokeColorNum)});map.setOptions(e);Object.keys(e).forEach(t=>{cookie.set(t,e[t],{expires:14})});Object.assign(mapOptions,e);closeDrawer()}function openDrawer(e){var t=document.querySelector(".footer");if(t.classList.contains("open"))return;t.classList.add("open");e.classList.add("open");document.getElementById(e.dataset.name).classList.add("open");if(e.dataset.name==="preferences")loadPrefs()}function closeDrawer(){document.querySelectorAll(".footer, .drawer div, .handle a").forEach(e=>e.classList.remove("open"))}function getColorFromNum(e){var t=getComputedStyle(document.querySelector(`.color-square[data-color="${e}"]`)).backgroundColor;return"#"+t.match(/\d+/g).map(y=(e=>(+e<16?"0":"")+(+e).toString(16))).join("")}function changePathColor(e){document.getElementById("path-color").dataset.color=e.dataset.color;document.querySelector(".color-picker-tooltip .color-square.selected").classList.remove("selected");e.classList.add("selected")}function changeNextButton(e,t=null,o=null,n=false){var a=document.querySelector(`.step[data-step="${e}"] .next`);if(t!==null)a.firstElementChild.innerHTML=`<span>${t}</span>`;if(o!==null)a.firstElementChild.onclick=(()=>goToStep(o));if(n)a.classList.add("hidden");if(!n)a.classList.remove("hidden")}function hideNextButton(e,t){var o=document.querySelector(`.step[data-step="${e}"] .next`);if(t)o.classList.add("hidden");if(!t)o.classList.remove("hidden")}function showStep(e){var t=document.querySelector(".step.active");var o=document.querySelector(`.step[data-step="${e}"]`);t.classList.add("complete");t.classList.remove("active");o.classList.add("active")}var originalInput;function goToStep(e,t=false){var o=parseInt(document.querySelector(".step.active").dataset.step);if(e===1){showStep(1);changeNextButton(1,"Preview",1.5);hideNextButton(1,document.getElementById("input-text").value.length<=0);if(t){destroyPath();resetUploadForm()}if(pathModified){document.getElementById("input-file").disabled=true;document.getElementById("input-text").disabled=true;goToStep(1.5);return}}if(e===1.25){}if(e===1.5){if(document.getElementById("input-text").value.length<=0){return}originalInput=document.getElementById("input-text").value.trim();var n=previewInput(originalInput,getFileType());if(!n)return;toast("Generating Preview",1500);changeNextButton(1,"Next",2);hideNextButton(1,false)}if(e===2&&o!==2){toast("Loading vertices",Math.ceil(path.getPath().length/250)*500);showStep(2);path.setOptions({editable:true});toggleListeners(true);fitPathInViewport()}if(e===3&&o!==3){toast("Saving Changes");showStep(3);path.setOptions({editable:false});destroyEditingTools();toggleListeners(false);fitPathInViewport()}}function previewInput(e,t){if(t===null){toast("Please choose a file type",3e3);grabAttention(document.querySelector(".file-type-selected"));return}if(t==="polyline"){render(escapePoly(e));return true}else;var o=false;switch(t){case"csv":o=getCoordinatesFromCSV(e);break;case"gpx":o=getCoordinatesFromGPX(e);break;case"coordinates":o=getCoordinatesFromCSV(e);break;case"geojson":console.log(e);o=getCoordinatesFromGeoJSON(e);break;default:break}console.log(o);if(!o)return false;o=polyline.encode(o);render(o);return true}function resetUploadForm(){var e=document.getElementById("input-file");e.value="";e.nextElementSibling.querySelector("span:first-of-type").classList.remove("uploaded");e.nextElementSibling.querySelector("span:last-of-type").innerText="Upload a text file";e.disabled=false;var t=document.getElementById("input-text");t.value="";t.disabled=false;textInputLength=-1;changeFileType(null,"Waiting for input");document.querySelectorAll(".step").forEach(e=>e.classList.remove("complete"));document.querySelector(".reset").classList.add("hidden");changeNextButton(1,"Preview",1.5);hideNextButton(1,true);unplug()}function grabAttention(e){if(!e)return;e.addEventListener("mouseover",t=>e.classList.remove("attention"),{once:true});e.addEventListener("animationend",t=>e.classList.remove("attention"),{once:true});setTimeout(t=>e.classList.add("attention"),100)}function resetAll(){if(!pathModified||confirm("Are you sure you want to reset?\r\nAll changes will be lost.\r\n"))goToStep(1,true)}var plug;function toast(e,t=-1){var o=document.querySelector(".toaster");t=t===-1?999999:t;if(o.classList.contains("toast")){unplug(true);setTimeout(o=>toast(e,t),201);return}e=typeof e==="object"?e.join(`</div><div>`):e;o.querySelector(".bread div").innerHTML=e;o.classList.add("toast");plug=setTimeout(unplug,t+200)}function unplug(e=false){clearTimeout(plug);var t=document.querySelector(".toaster");t.classList.remove("toast")}var map,path=null,hoverPoly=null,preview=null,shape=null,shapeBounds=[];function initialize(){setMapOptions();map=new google.maps.Map(document.getElementById("map"),mapOptions);map.addListener("tilesloaded",()=>{setTimeout(()=>document.querySelectorAll(".gm-style-cc").forEach(e=>e.style.display="none"),150)})}function setMapOptions(){var e=["minZoom","maxZoom","precision","mapType","zoomControl","strokeColorNum"];Object.assign(mapOptions,defaultMapOptions);if(Object.keys(cookie.all()).length===0){e.forEach(e=>cookie.set(e,defaultMapOptions[e],{expires:14}))}else{Object.keys(cookie.all()).forEach(e=>{var t=cookie.get(e);mapOptions[e]=t==="true"?true:t==="false"?false:t})}}function fitPathInViewport(){var e=new google.maps.LatLngBounds;path.getPath().forEach(function(t){e.extend(t)});map.fitBounds(e)}function render(e){console.log("render\n",e);if(path!==null)path.setMap(null);path=new google.maps.Polyline({path:getLatLngArrayFromPolyline(e,mapOptions.precision),strokeColor:getColorFromNum(mapOptions.strokeColorNum),strokeOpacity:1,strokeWeight:4,map:map});fitPathInViewport()}function toggleListeners(e){if(e){google.maps.event.addListener(path,"click",e=>{if(e.vertex==undefined)return;removeVertex(path.getPath(),e.vertex)});google.maps.event.addListener(map,"rightclick",e=>drawShape(e))}else{google.maps.event.clearListeners(map,"click");google.maps.event.clearListeners(map,"rightclick");google.maps.event.clearListeners(map,"mousemove")}}function getLatLngArrayFromPolyline(e,t=5){var o=polyline.decode(e,t);var n=[];o.forEach(e=>{n.push(new google.maps.LatLng(e[0],e[1]))});return n}function escapePoly(e){return e.split(String.fromCharCode(92)).join(String.fromCharCode(92,92))}function unescapePoly(e){return e.split(String.fromCharCode(92,92)).join(String.fromCharCode(92))}function destroyEditingTools(){if(preview!==null){preview.remove();preview=null}if(hoverPoly!==null){hoverPoly.setMap(null);hoverPoly=null}if(shape!==null){shape.setMap(null);shape=null}shapeBounds=[]}function destroyPath(){destroyEditingTools();toggleListeners(false);if(path!=null){path.setMap(null);path=null}pathModified=false}function getPolylineFromPath(){var e=polyline.encode(getCordsFromPath(path));e=e.split(String.fromCharCode(92)).join(String.fromCharCode(92,92));return e}function getCordsFromPath(e,t=5){var o=[];var n=e.getPath();for(var a=0;a<n.length;a++){o.push([n.getAt(a).lat().toFixed(t),n.getAt(a).lng().toFixed(t)])}return o}function exportCords(e,t,o=false){var n="";console.log(t);if(t==="csv"){e.forEach(e=>n+=e+"\r\n");return n}if(t==="arr"){e.forEach(e=>{n+="["+e+"],"+(o?"\r\n":"")})}if(t==="obj"){e.forEach(e=>{n+="{x:"+e[0]+", y:"+e[1]+"},"+(o?"\r\n":"")})}if(!o&&n.charAt(n.length-1)===",")n=n.slice(0,-1);if(o&&n.charAt(n.length-2)===",")n=n.slice(0,-2)+"\r\n";return n}var pathModified=false;function removeVertex(e,t){if(!e||t==undefined)return;if(t===0||t===e.length-1)return;pathModified=true;e.removeAt(t)}function drawShape(e){if(path==undefined)return;if(shapeBounds.length==2){shapeBounds=[];shape.setMap(null);return}var t=[parseFloat(e.latLng.lat().toFixed(5)),parseFloat(e.latLng.lng().toFixed(5))];shapeBounds.push(t);if(shapeBounds.length==1){preview=google.maps.event.addListener(map,"mousemove",e=>{if(hoverPoly)hoverPoly.setMap(null);var o=[parseFloat(e.latLng.lat().toFixed(5)),parseFloat(e.latLng.lng().toFixed(5))];hoverPoly=new google.maps.Polygon({map:map,fillOpacity:.1,strokeWeight:.9,strokeOpacity:.5,fillColor:"#FFF",strokeColor:"#FFF",clickable:false,paths:[{lat:t[0],lng:t[1]},{lat:t[0],lng:o[1]},{lat:o[0],lng:o[1]},{lat:o[0],lng:t[1]}]})})}if(shapeBounds.length==2){hoverPoly.setMap(null);preview.remove();shape=new google.maps.Polygon({map:map,fillOpacity:.3,strokeWeight:.9,clickable:true,fillColor:"#FFF",strokeColor:"#FFF",editable:true,paths:[{lat:shapeBounds[0][0],lng:shapeBounds[0][1]},{lat:shapeBounds[0][0],lng:shapeBounds[1][1]},{lat:shapeBounds[1][0],lng:shapeBounds[1][1]},{lat:shapeBounds[1][0],lng:shapeBounds[0][1]}]});google.maps.event.addListener(shape,"click",()=>{var e=path.getPath();for(var t=0;t<e.length;t++){var o=new google.maps.LatLng(e.getAt(t).lat(),e.getAt(t).lng());if(google.maps.geometry.poly.containsLocation(o,shape))removeVertex(e,t)}})}}google.maps.event.addDomListener(window,"load",initialize);